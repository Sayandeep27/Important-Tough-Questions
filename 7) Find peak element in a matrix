class Solution {
public:
    int find_max_index(vector<vector<int>>&mat,int mid)
    {
        int maxi=INT_MIN;
        int idx=-1;

        for(int i=0;i<mat.size();i++)
        {
            if(mat[i][mid]>maxi)
            {
                maxi=mat[i][mid];
                idx=i;
            }
        }

        return idx;
    }

    vector<int> findPeakGrid(vector<vector<int>>& mat) {

        int n=mat.size(); int m=mat[0].size();

        int start=0,end=m-1;

        while(start<=end)
        {
            int mid=start+(end-start)/2;

            int max_row_index=find_max_index(mat,mid);

            int left = mid-1>=0 ? mat[max_row_index][mid-1] : -1;
            int right = mid+1<m ? mat[max_row_index][mid+1]:-1;

            if(mat[max_row_index][mid]>left and mat[max_row_index][mid]>right) return {max_row_index,mid};
            else if(mat[max_row_index][mid]<left) end=mid-1;
            else start=mid+1;
        }   


        return {-1,-1};
    }
};
